{{- if eq .chezmoi.os "windows" -}}

# TODO: elevated shell should only be spawned if an actual change is required. Minimize administrative actions in corporate environments.
# Self-elevate the script if required
if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
  if ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
    $CommandLine = "-NoExit -File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
    Start-Process -Wait -FilePath PowerShell.exe -Verb Runas -ArgumentList $CommandLine
    Exit
  }
}

# Set powershell execution policy to unrestricted
# Lots of unsigned scripts will not be able to run otherwise
# TODO: fix this?
# $currentPolicy = Get-ExecutionPolicy
# if ($currentPolicy -ne 'Unrestricted') {
#     Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force
# }

# Enable long path support in windows
# The legacy 256 character limit for windows paths can be elevated somewhat (doesn't fix everything)
$longPathsEnabled = Get-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem' -Name 'LongPathsEnabled'
if ($longPathsEnabled.LongPathsEnabled -ne 1) {
    Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem' -Name 'LongPathsEnabled' -Value 1
}

# Install winget package manager
$wingetInstalled = Get-Command winget -ErrorAction SilentlyContinue
if (-not $wingetInstalled) {
    # Install winget
    Add-AppxPackage -RegisterByFamilyName -MainPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe
}

# Enable WSL2 Feature
# Run the wsl --status command
$wslStatus = wsl --status

# Check the exit code of the command
if ($LASTEXITCODE -eq 0) {
    wsl --install --no-distribution
}

{{ end -}}
